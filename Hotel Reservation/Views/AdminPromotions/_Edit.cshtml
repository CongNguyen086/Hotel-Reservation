@model Hotel_Reservation.Models.Promotion

@{
    ViewBag.Title = "Edit";
    List<SelectListItem> statuslist = new List<SelectListItem>();
    statuslist.Add(new SelectListItem() { Text = "Processing", Value = "Processing" });
    statuslist.Add(new SelectListItem() { Text = "Overdued", Value = "Overdued" });
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Promotion</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.promotionId)

        <div class="form-group">
            @Html.LabelFor(model => model.promotionDescription, "Description", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.promotionDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.promotionDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.appliedRoomType, "Promoted Room", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("appliedRoomType", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.appliedRoomType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.roomDiscount, "Price Discount", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.roomDiscount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.roomDiscount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.startDate, "Start Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.startDate, new { htmlAttributes = new { @class = "form-control", @id = "datepicker1" } })
                @Html.ValidationMessageFor(model => model.startDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.endDate, "End Date", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.endDate, new { htmlAttributes = new { @class = "form-control", @id = "datepicker2" } })
                @Html.ValidationMessageFor(model => model.endDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.promotionStatus, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.promotionStatus, statuslist, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.promotionStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" onclick="return alert('Update Successfully!')" />
                <input type="submit" value="Cancel" class="btn btn-default" data-dismiss="modal" />
            </div>
        </div>
    </div>
}

<!-- Date picker-->
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<link rel="stylesheet" href="/resources/demos/style.css">
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<script>
        $(document).ready(function () {
            $("#datepicker1").datepicker({
                minDate: new Date(),
                dateFormat: 'dd-mm-yy',
                pickTime: false,
            });
            $("#datepicker2").datepicker({
                minDate: new Date(),
                dateFormat: 'dd-mm-yy',
                pickTime: false,
            });
        });
</script>